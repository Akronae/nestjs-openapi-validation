// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`AppController (e2e) /query_1 fail (GET) 1`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "string",
      "message": "required",
      "path": [
        "str1",
      ],
      "received": "undefined",
    },
    {
      "code": "invalid_string",
      "message": "Invalid datetime",
      "path": [
        "date",
      ],
      "validation": "datetime",
    },
    {
      "code": "invalid_type",
      "expected": "string",
      "message": "required",
      "path": [
        "date",
      ],
      "received": "undefined",
    },
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "nbr1",
      ],
      "received": "nan",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_1 success (GET) 1`] = `
{
  "date": "2025-01-01T00:00:00.000Z",
  "nbr1": 123,
  "str1": "lala",
}
`;

exports[`AppController (e2e) /query_2 fail (GET) 1`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "nbr1",
      ],
      "received": "nan",
    },
    {
      "code": "invalid_type",
      "expected": "'A' | 'B' | 'C'",
      "message": "Required",
      "path": [
        "enum1",
      ],
      "received": "undefined",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_2 success (GET) 1`] = `
{
  "enum1": "A",
  "nbr1": 123,
  "str1": "lala",
}
`;

exports[`AppController (e2e) /query_3 fail (GET) 1`] = `
{
  "issues": [
    {
      "code": "invalid_union",
      "message": "Invalid input",
      "path": [
        "enum1",
      ],
      "unionErrors": [
        {
          "issues": [
            {
              "code": "invalid_type",
              "expected": "'A' | 'B' | 'C'",
              "message": "Required",
              "path": [
                "enum1",
              ],
              "received": "undefined",
            },
          ],
          "name": "ZodError",
        },
        {
          "issues": [
            {
              "code": "invalid_type",
              "expected": "'AA' | 'BB' | 'CC'",
              "message": "Required",
              "path": [
                "enum1",
              ],
              "received": "undefined",
            },
          ],
          "name": "ZodError",
        },
      ],
    },
    {
      "code": "invalid_type",
      "expected": "string",
      "message": "required",
      "path": [
        "enum2",
      ],
      "received": "undefined",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_3 success (GET) 1`] = `
{
  "enum1": "BB",
  "enum2": "okok",
}
`;

exports[`AppController (e2e) /query_4 fail (GET) 1`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "string",
      "message": "required",
      "path": [
        "query1",
        "str1",
      ],
      "received": "undefined",
    },
    {
      "code": "invalid_string",
      "message": "Invalid datetime",
      "path": [
        "query1",
        "date",
      ],
      "validation": "datetime",
    },
    {
      "code": "invalid_type",
      "expected": "string",
      "message": "required",
      "path": [
        "query1",
        "date",
      ],
      "received": "undefined",
    },
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "query1",
        "nbr1",
      ],
      "received": "nan",
    },
    {
      "code": "invalid_union",
      "message": "Invalid input",
      "path": [
        "field2",
      ],
      "unionErrors": [
        {
          "issues": [
            {
              "code": "invalid_type",
              "expected": "object",
              "message": "Required",
              "path": [
                "field2",
              ],
              "received": "undefined",
            },
          ],
          "name": "ZodError",
        },
        {
          "issues": [
            {
              "code": "invalid_type",
              "expected": "object",
              "message": "Required",
              "path": [
                "field2",
              ],
              "received": "undefined",
            },
          ],
          "name": "ZodError",
        },
      ],
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_4 success (GET) 1`] = `
{
  "field2": {
    "enum1": "A",
    "enum2": "okok",
  },
  "query1": {
    "date": "2025-05-02T00:00:00.000Z",
    "nbr1": 99,
    "str1": "ahah",
  },
}
`;

exports[`AppController (e2e) /query_5 fail (POST) 1`] = `
{
  "issues": [
    {
      "code": "invalid_string",
      "message": "Invalid datetime",
      "path": [
        "query4",
        "query1",
        "date",
      ],
      "validation": "datetime",
    },
    {
      "code": "invalid_union",
      "message": "Invalid input",
      "path": [
        "query4",
        "field2",
      ],
      "unionErrors": [
        {
          "issues": [
            {
              "code": "invalid_type",
              "expected": "number",
              "message": "Expected number, received nan",
              "path": [
                "query4",
                "field2",
                "nbr1",
              ],
              "received": "nan",
            },
            {
              "code": "invalid_enum_value",
              "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'D'",
              "options": [
                "A",
                "B",
                "C",
              ],
              "path": [
                "query4",
                "field2",
                "enum1",
              ],
              "received": "D",
            },
          ],
          "name": "ZodError",
        },
        {
          "issues": [
            {
              "code": "invalid_union",
              "message": "Invalid input",
              "path": [
                "query4",
                "field2",
                "enum1",
              ],
              "unionErrors": [
                {
                  "issues": [
                    {
                      "code": "invalid_enum_value",
                      "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'D'",
                      "options": [
                        "A",
                        "B",
                        "C",
                      ],
                      "path": [
                        "query4",
                        "field2",
                        "enum1",
                      ],
                      "received": "D",
                    },
                  ],
                  "name": "ZodError",
                },
                {
                  "issues": [
                    {
                      "code": "invalid_enum_value",
                      "message": "Invalid enum value. Expected 'AA' | 'BB' | 'CC', received 'D'",
                      "options": [
                        "AA",
                        "BB",
                        "CC",
                      ],
                      "path": [
                        "query4",
                        "field2",
                        "enum1",
                      ],
                      "received": "D",
                    },
                  ],
                  "name": "ZodError",
                },
              ],
            },
          ],
          "name": "ZodError",
        },
      ],
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_5 success (POST) 1`] = `
{
  "force": false,
  "query4": {
    "field2": {
      "enum1": "A",
      "enum2": "okok",
    },
    "query1": {
      "date": "2025-05-02T00:00:00.000Z",
      "nbr1": 99,
      "str1": "ahah",
    },
  },
}
`;

exports[`AppController (e2e) /query_6 fail (POST) 1`] = `
{
  "issues": [
    {
      "code": "invalid_union",
      "message": "Invalid input",
      "path": [
        "arr",
        1,
        "field2",
      ],
      "unionErrors": [
        {
          "issues": [
            {
              "code": "invalid_type",
              "expected": "string",
              "message": "required",
              "path": [
                "arr",
                1,
                "field2",
                "str1",
              ],
              "received": "undefined",
            },
            {
              "code": "invalid_type",
              "expected": "number",
              "message": "Expected number, received nan",
              "path": [
                "arr",
                1,
                "field2",
                "nbr1",
              ],
              "received": "nan",
            },
            {
              "code": "invalid_enum_value",
              "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'AAA'",
              "options": [
                "A",
                "B",
                "C",
              ],
              "path": [
                "arr",
                1,
                "field2",
                "enum1",
              ],
              "received": "AAA",
            },
          ],
          "name": "ZodError",
        },
        {
          "issues": [
            {
              "code": "invalid_union",
              "message": "Invalid input",
              "path": [
                "arr",
                1,
                "field2",
                "enum1",
              ],
              "unionErrors": [
                {
                  "issues": [
                    {
                      "code": "invalid_enum_value",
                      "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'AAA'",
                      "options": [
                        "A",
                        "B",
                        "C",
                      ],
                      "path": [
                        "arr",
                        1,
                        "field2",
                        "enum1",
                      ],
                      "received": "AAA",
                    },
                  ],
                  "name": "ZodError",
                },
                {
                  "issues": [
                    {
                      "code": "invalid_enum_value",
                      "message": "Invalid enum value. Expected 'AA' | 'BB' | 'CC', received 'AAA'",
                      "options": [
                        "AA",
                        "BB",
                        "CC",
                      ],
                      "path": [
                        "arr",
                        1,
                        "field2",
                        "enum1",
                      ],
                      "received": "AAA",
                    },
                  ],
                  "name": "ZodError",
                },
              ],
            },
          ],
          "name": "ZodError",
        },
      ],
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_6 success (POST) 1`] = `
{
  "arr": [
    {
      "field2": {
        "enum1": "A",
        "nbr1": 123,
        "str1": "lala",
      },
      "query1": {
        "date": "2025-05-02T00:00:00.000Z",
        "nbr1": 999,
        "str1": "lalala",
      },
    },
    {
      "field2": {
        "enum1": "AA",
        "enum2": "Aahah",
      },
      "query1": {
        "date": "2025-10-02T00:00:00.000Z",
        "nbr1": 111,
        "str1": "lalala",
      },
    },
  ],
}
`;

exports[`AppController (e2e) /query_7 fail (POST) 1`] = `
{
  "issues": [
    {
      "code": "too_small",
      "exact": false,
      "inclusive": true,
      "message": "Number must be greater than or equal to -3",
      "minimum": -3,
      "path": [
        "nbr",
      ],
      "type": "number",
    },
    {
      "code": "invalid_string",
      "message": "Invalid email",
      "path": [
        "email",
      ],
      "validation": "email",
    },
    {
      "code": "invalid_string",
      "message": "Invalid url",
      "path": [
        "url",
      ],
      "validation": "url",
    },
    {
      "code": "invalid_string",
      "message": "Invalid",
      "path": [
        "phone",
      ],
      "validation": "regex",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_7 fail (POST) 2`] = `
{
  "issues": [
    {
      "code": "too_big",
      "exact": false,
      "inclusive": true,
      "maximum": 10,
      "message": "String must contain at most 10 character(s)",
      "path": [
        "str",
      ],
      "type": "string",
    },
    {
      "code": "too_big",
      "exact": false,
      "inclusive": true,
      "maximum": 23,
      "message": "Number must be less than or equal to 23",
      "path": [
        "nbr",
      ],
      "type": "number",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_7 success (POST) 1`] = `
{
  "email": "hey@hey.com",
  "nbr": 14,
  "phone": "1234567894",
  "str": "hello",
  "url": "https://google.com",
}
`;

exports[`AppController (e2e) /query_8 fail (POST) 1`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "nested",
        "long",
        "prop",
      ],
      "received": "nan",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_8 success (POST) 1`] = `
{
  "nested": {
    "long": {
      "prop": 21,
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 1`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "object",
      "message": "Required",
      "path": [
        "required",
      ],
      "received": "undefined",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 2`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "object",
      "message": "Required",
      "path": [
        "required",
        "long",
      ],
      "received": "undefined",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 3`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "object",
      "message": "Expected object, received number",
      "path": [
        "required",
        "long",
      ],
      "received": "number",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 4`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "required",
        "long",
        "prop",
      ],
      "received": "nan",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 5`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "object",
      "message": "Required",
      "path": [
        "opt",
        "long",
      ],
      "received": "undefined",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 6`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "opt",
        "long",
        "prop",
      ],
      "received": "nan",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 7`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "opt",
        "long",
        "prop",
      ],
      "received": "nan",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 8`] = `
{
  "issues": [
    {
      "code": "invalid_type",
      "expected": "number",
      "message": "Expected number, received nan",
      "path": [
        "required",
        "opt",
        "prop",
      ],
      "received": "nan",
    },
  ],
  "name": "ZodError",
}
`;

exports[`AppController (e2e) /query_9 success (POST) 1`] = `
{
  "required": {
    "long": {
      "prop": 21,
    },
    "semi": {},
  },
}
`;

exports[`AppController (e2e) /query_9 success (POST) 2`] = `
{
  "required": {
    "long": {
      "prop": 21,
    },
  },
}
`;

exports[`AppController (e2e) /query_9 success (POST) 3`] = `
{
  "opt": {
    "long": {
      "prop": 21,
    },
  },
  "required": {
    "long": {
      "prop": 21,
    },
  },
}
`;
