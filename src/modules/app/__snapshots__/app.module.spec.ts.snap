// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`AppController (e2e) /query_1 fail (GET) 1`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "str1",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_string",
          "message": "Invalid datetime",
          "path": [
            "date",
          ],
          "validation": "datetime",
        },
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "date",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "nbr1",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_1 success (GET) 1`] = `
{
  "date": "2025-01-01T00:00:00.000Z",
  "nbr1": 123,
  "str1": "lala",
}
`;

exports[`AppController (e2e) /query_2 fail (GET) 1`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "nbr1",
          ],
          "received": "nan",
        },
        {
          "code": "invalid_type",
          "expected": "'A' | 'B' | 'C'",
          "message": "Required",
          "path": [
            "enum1",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_2 success (GET) 1`] = `
{
  "enum1": "A",
  "nbr1": 123,
  "str1": "lala",
}
`;

exports[`AppController (e2e) /query_3 fail (GET) 1`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "enum1",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "'A' | 'B' | 'C'",
                  "message": "Required",
                  "path": [
                    "enum1",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "'AA' | 'BB' | 'CC'",
                  "message": "Required",
                  "path": [
                    "enum1",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
          ],
        },
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "enum2",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_3 success (GET) 1`] = `
{
  "enum1": "BB",
  "enum2": "okok",
}
`;

exports[`AppController (e2e) /query_4 fail (GET) 1`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "query1",
            "str1",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_string",
          "message": "Invalid datetime",
          "path": [
            "query1",
            "date",
          ],
          "validation": "datetime",
        },
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "query1",
            "date",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "query1",
            "nbr1",
          ],
          "received": "nan",
        },
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "field2",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "object",
                  "message": "Required",
                  "path": [
                    "field2",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "object",
                  "message": "Required",
                  "path": [
                    "field2",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
          ],
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_4 success (GET) 1`] = `
{
  "field2": {
    "enum1": "A",
    "enum2": "okok",
  },
  "query1": {
    "date": "2025-05-02T00:00:00.000Z",
    "nbr1": 99,
    "str1": "ahah",
  },
}
`;

exports[`AppController (e2e) /query_5 fail (POST) 1`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_string",
          "message": "Invalid datetime",
          "path": [
            "query4",
            "query1",
            "date",
          ],
          "validation": "datetime",
        },
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "query4",
            "field2",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "number",
                  "message": "Expected number, received nan",
                  "path": [
                    "query4",
                    "field2",
                    "nbr1",
                  ],
                  "received": "nan",
                },
                {
                  "code": "invalid_enum_value",
                  "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'D'",
                  "options": [
                    "A",
                    "B",
                    "C",
                  ],
                  "path": [
                    "query4",
                    "field2",
                    "enum1",
                  ],
                  "received": "D",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_union",
                  "message": "Invalid input",
                  "path": [
                    "query4",
                    "field2",
                    "enum1",
                  ],
                  "unionErrors": [
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'D'",
                          "options": [
                            "A",
                            "B",
                            "C",
                          ],
                          "path": [
                            "query4",
                            "field2",
                            "enum1",
                          ],
                          "received": "D",
                        },
                      ],
                      "name": "ZodError",
                    },
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'AA' | 'BB' | 'CC', received 'D'",
                          "options": [
                            "AA",
                            "BB",
                            "CC",
                          ],
                          "path": [
                            "query4",
                            "field2",
                            "enum1",
                          ],
                          "received": "D",
                        },
                      ],
                      "name": "ZodError",
                    },
                  ],
                },
              ],
              "name": "ZodError",
            },
          ],
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_5 success (POST) 1`] = `
{
  "force": false,
  "query4": {
    "field2": {
      "enum1": "A",
      "enum2": "okok",
    },
    "query1": {
      "date": "2025-05-02T00:00:00.000Z",
      "nbr1": 99,
      "str1": "ahah",
    },
  },
}
`;

exports[`AppController (e2e) /query_6 fail (POST) 1`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "arr",
            1,
            "field2",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "string",
                  "message": "required",
                  "path": [
                    "arr",
                    1,
                    "field2",
                    "str1",
                  ],
                  "received": "undefined",
                },
                {
                  "code": "invalid_type",
                  "expected": "number",
                  "message": "Expected number, received nan",
                  "path": [
                    "arr",
                    1,
                    "field2",
                    "nbr1",
                  ],
                  "received": "nan",
                },
                {
                  "code": "invalid_enum_value",
                  "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'AAA'",
                  "options": [
                    "A",
                    "B",
                    "C",
                  ],
                  "path": [
                    "arr",
                    1,
                    "field2",
                    "enum1",
                  ],
                  "received": "AAA",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_union",
                  "message": "Invalid input",
                  "path": [
                    "arr",
                    1,
                    "field2",
                    "enum1",
                  ],
                  "unionErrors": [
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'AAA'",
                          "options": [
                            "A",
                            "B",
                            "C",
                          ],
                          "path": [
                            "arr",
                            1,
                            "field2",
                            "enum1",
                          ],
                          "received": "AAA",
                        },
                      ],
                      "name": "ZodError",
                    },
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'AA' | 'BB' | 'CC', received 'AAA'",
                          "options": [
                            "AA",
                            "BB",
                            "CC",
                          ],
                          "path": [
                            "arr",
                            1,
                            "field2",
                            "enum1",
                          ],
                          "received": "AAA",
                        },
                      ],
                      "name": "ZodError",
                    },
                  ],
                },
              ],
              "name": "ZodError",
            },
          ],
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_6 success (POST) 1`] = `
{
  "arr": [
    {
      "field2": {
        "enum1": "A",
        "nbr1": 123,
        "str1": "lala",
      },
      "query1": {
        "date": "2025-05-02T00:00:00.000Z",
        "nbr1": 999,
        "str1": "lalala",
      },
    },
    {
      "field2": {
        "enum1": "AA",
        "enum2": "Aahah",
      },
      "query1": {
        "date": "2025-10-02T00:00:00.000Z",
        "nbr1": 111,
        "str1": "lalala",
      },
    },
  ],
}
`;

exports[`AppController (e2e) /query_7 fail (POST) 1`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "too_small",
          "exact": false,
          "inclusive": true,
          "message": "Number must be greater than or equal to -3",
          "minimum": -3,
          "path": [
            "nbr",
          ],
          "type": "number",
        },
        {
          "code": "invalid_string",
          "message": "Invalid email",
          "path": [
            "email",
          ],
          "validation": "email",
        },
        {
          "code": "invalid_string",
          "message": "Invalid url",
          "path": [
            "url",
          ],
          "validation": "url",
        },
        {
          "code": "invalid_string",
          "message": "Invalid",
          "path": [
            "phone",
          ],
          "validation": "regex",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_7 fail (POST) 2`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "too_big",
          "exact": false,
          "inclusive": true,
          "maximum": 10,
          "message": "String must contain at most 10 character(s)",
          "path": [
            "str",
          ],
          "type": "string",
        },
        {
          "code": "too_big",
          "exact": false,
          "inclusive": true,
          "maximum": 23,
          "message": "Number must be less than or equal to 23",
          "path": [
            "nbr",
          ],
          "type": "number",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_7 success (POST) 1`] = `
{
  "email": "hey@hey.com",
  "nbr": 14,
  "phone": "1234567894",
  "str": "hello",
  "url": "https://google.com",
}
`;

exports[`AppController (e2e) /query_8 fail (POST) 1`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "nested",
            "long",
            "prop",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_8 success (POST) 1`] = `
{
  "nested": {
    "long": {
      "prop": 21,
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 1`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "object",
          "message": "Required",
          "path": [
            "required",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 2`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "object",
          "message": "Required",
          "path": [
            "required",
            "long",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 3`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "object",
          "message": "Expected object, received number",
          "path": [
            "required",
            "long",
          ],
          "received": "number",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 4`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "required",
            "long",
            "prop",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 5`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "object",
          "message": "Required",
          "path": [
            "opt",
            "long",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 6`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "opt",
            "long",
            "prop",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 7`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "opt",
            "long",
            "prop",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 fail (POST) 8`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "required",
            "opt",
            "prop",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_9 success (POST) 1`] = `
{
  "required": {
    "long": {
      "prop": 21,
    },
    "semi": {},
  },
}
`;

exports[`AppController (e2e) /query_9 success (POST) 2`] = `
{
  "required": {
    "long": {
      "prop": 21,
    },
  },
}
`;

exports[`AppController (e2e) /query_9 success (POST) 3`] = `
{
  "opt": {
    "long": {
      "prop": 21,
    },
  },
  "required": {
    "long": {
      "prop": 21,
    },
  },
}
`;

exports[`AppController (e2e) /query_10 fail (POST) 1`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "arr2d2",
            1,
            2,
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /query_10 success (POST) 1`] = `
{
  "arr2d": [
    [
      "a",
      "b",
    ],
    [
      "c",
      "d",
    ],
  ],
}
`;

exports[`AppController (e2e) /response_1 fail (GET) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "str1",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_string",
          "message": "Invalid datetime",
          "path": [
            "date",
          ],
          "validation": "datetime",
        },
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "date",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "nbr1",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_1 success (GET) 1`] = `
{
  "date": "2025-01-01T00:00:00.000Z",
  "nbr1": 123,
  "str1": "lala",
}
`;

exports[`AppController (e2e) /response_2 fail (GET) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "nbr1",
          ],
          "received": "nan",
        },
        {
          "code": "invalid_type",
          "expected": "'A' | 'B' | 'C'",
          "message": "Required",
          "path": [
            "enum1",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_2 success (GET) 1`] = `
{
  "enum1": "A",
  "nbr1": 42,
  "str1": "test",
}
`;

exports[`AppController (e2e) /response_3 fail (GET) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "enum1",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "'A' | 'B' | 'C'",
                  "message": "Required",
                  "path": [
                    "enum1",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "'AA' | 'BB' | 'CC'",
                  "message": "Required",
                  "path": [
                    "enum1",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
          ],
        },
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "enum2",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_3 success (GET) 1`] = `
{
  "enum1": "BB",
  "enum2": "okok",
}
`;

exports[`AppController (e2e) /response_4 fail (GET) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "query1",
            "str1",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_string",
          "message": "Invalid datetime",
          "path": [
            "query1",
            "date",
          ],
          "validation": "datetime",
        },
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "query1",
            "date",
          ],
          "received": "undefined",
        },
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "query1",
            "nbr1",
          ],
          "received": "nan",
        },
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "field2",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "string",
                  "message": "required",
                  "path": [
                    "field2",
                    "str1",
                  ],
                  "received": "undefined",
                },
                {
                  "code": "invalid_type",
                  "expected": "number",
                  "message": "Expected number, received nan",
                  "path": [
                    "field2",
                    "nbr1",
                  ],
                  "received": "nan",
                },
                {
                  "code": "invalid_type",
                  "expected": "'A' | 'B' | 'C'",
                  "message": "Required",
                  "path": [
                    "field2",
                    "enum1",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_union",
                  "message": "Invalid input",
                  "path": [
                    "field2",
                    "enum1",
                  ],
                  "unionErrors": [
                    {
                      "issues": [
                        {
                          "code": "invalid_type",
                          "expected": "'A' | 'B' | 'C'",
                          "message": "Required",
                          "path": [
                            "field2",
                            "enum1",
                          ],
                          "received": "undefined",
                        },
                      ],
                      "name": "ZodError",
                    },
                    {
                      "issues": [
                        {
                          "code": "invalid_type",
                          "expected": "'AA' | 'BB' | 'CC'",
                          "message": "Required",
                          "path": [
                            "field2",
                            "enum1",
                          ],
                          "received": "undefined",
                        },
                      ],
                      "name": "ZodError",
                    },
                  ],
                },
                {
                  "code": "invalid_type",
                  "expected": "string",
                  "message": "required",
                  "path": [
                    "field2",
                    "enum2",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
          ],
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_4 success (GET) 1`] = `
{
  "field2": {
    "enum1": "A",
    "enum2": "okok",
  },
  "query1": {
    "date": "2025-06-01T00:00:00.000Z",
    "nbr1": 10,
    "str1": "ok",
  },
}
`;

exports[`AppController (e2e) /response_5 fail (POST) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_string",
          "message": "Invalid datetime",
          "path": [
            "query4",
            "query1",
            "date",
          ],
          "validation": "datetime",
        },
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "query4",
            "query1",
            "nbr1",
          ],
          "received": "nan",
        },
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "query4",
            "field2",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "number",
                  "message": "Expected number, received nan",
                  "path": [
                    "query4",
                    "field2",
                    "nbr1",
                  ],
                  "received": "nan",
                },
                {
                  "code": "invalid_enum_value",
                  "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'Z'",
                  "options": [
                    "A",
                    "B",
                    "C",
                  ],
                  "path": [
                    "query4",
                    "field2",
                    "enum1",
                  ],
                  "received": "Z",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_union",
                  "message": "Invalid input",
                  "path": [
                    "query4",
                    "field2",
                    "enum1",
                  ],
                  "unionErrors": [
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'Z'",
                          "options": [
                            "A",
                            "B",
                            "C",
                          ],
                          "path": [
                            "query4",
                            "field2",
                            "enum1",
                          ],
                          "received": "Z",
                        },
                      ],
                      "name": "ZodError",
                    },
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'AA' | 'BB' | 'CC', received 'Z'",
                          "options": [
                            "AA",
                            "BB",
                            "CC",
                          ],
                          "path": [
                            "query4",
                            "field2",
                            "enum1",
                          ],
                          "received": "Z",
                        },
                      ],
                      "name": "ZodError",
                    },
                  ],
                },
              ],
              "name": "ZodError",
            },
          ],
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_5 success (POST) 1`] = `
{
  "force": true,
  "query4": {
    "field2": {
      "enum1": "A",
      "enum2": "okok",
    },
    "query1": {
      "date": "2025-06-01T00:00:00.000Z",
      "nbr1": 123,
      "str1": "ok",
    },
  },
}
`;

exports[`AppController (e2e) /response_6 fail (POST) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_union",
          "message": "Invalid input",
          "path": [
            "arr",
            0,
            "field2",
          ],
          "unionErrors": [
            {
              "issues": [
                {
                  "code": "invalid_type",
                  "expected": "string",
                  "message": "required",
                  "path": [
                    "arr",
                    0,
                    "field2",
                    "str1",
                  ],
                  "received": "undefined",
                },
                {
                  "code": "invalid_type",
                  "expected": "number",
                  "message": "Expected number, received nan",
                  "path": [
                    "arr",
                    0,
                    "field2",
                    "nbr1",
                  ],
                  "received": "nan",
                },
                {
                  "code": "invalid_enum_value",
                  "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'INVALID'",
                  "options": [
                    "A",
                    "B",
                    "C",
                  ],
                  "path": [
                    "arr",
                    0,
                    "field2",
                    "enum1",
                  ],
                  "received": "INVALID",
                },
              ],
              "name": "ZodError",
            },
            {
              "issues": [
                {
                  "code": "invalid_union",
                  "message": "Invalid input",
                  "path": [
                    "arr",
                    0,
                    "field2",
                    "enum1",
                  ],
                  "unionErrors": [
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'A' | 'B' | 'C', received 'INVALID'",
                          "options": [
                            "A",
                            "B",
                            "C",
                          ],
                          "path": [
                            "arr",
                            0,
                            "field2",
                            "enum1",
                          ],
                          "received": "INVALID",
                        },
                      ],
                      "name": "ZodError",
                    },
                    {
                      "issues": [
                        {
                          "code": "invalid_enum_value",
                          "message": "Invalid enum value. Expected 'AA' | 'BB' | 'CC', received 'INVALID'",
                          "options": [
                            "AA",
                            "BB",
                            "CC",
                          ],
                          "path": [
                            "arr",
                            0,
                            "field2",
                            "enum1",
                          ],
                          "received": "INVALID",
                        },
                      ],
                      "name": "ZodError",
                    },
                  ],
                },
                {
                  "code": "invalid_type",
                  "expected": "string",
                  "message": "required",
                  "path": [
                    "arr",
                    0,
                    "field2",
                    "enum2",
                  ],
                  "received": "undefined",
                },
              ],
              "name": "ZodError",
            },
          ],
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_6 success (POST) 1`] = `
{
  "arr": [
    {
      "field2": {
        "enum1": "A",
        "nbr1": 2,
        "str1": "x",
      },
      "query1": {
        "date": "2025-01-01T00:00:00.000Z",
        "nbr1": 1,
        "str1": "abc",
      },
    },
    {
      "field2": {
        "enum1": "AA",
        "enum2": "okok",
      },
      "query1": {
        "date": "2025-02-01T00:00:00.000Z",
        "nbr1": 3,
        "str1": "def",
      },
    },
  ],
}
`;

exports[`AppController (e2e) /response_7 fail (POST) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "too_small",
          "exact": false,
          "inclusive": true,
          "message": "String must contain at least 1 character(s)",
          "minimum": 1,
          "path": [
            "str",
          ],
          "type": "string",
        },
        {
          "code": "too_small",
          "exact": false,
          "inclusive": true,
          "message": "Number must be greater than or equal to -3",
          "minimum": -3,
          "path": [
            "nbr",
          ],
          "type": "number",
        },
        {
          "code": "invalid_string",
          "message": "Invalid email",
          "path": [
            "email",
          ],
          "validation": "email",
        },
        {
          "code": "invalid_string",
          "message": "Invalid url",
          "path": [
            "url",
          ],
          "validation": "url",
        },
        {
          "code": "invalid_string",
          "message": "Invalid",
          "path": [
            "phone",
          ],
          "validation": "regex",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_7 success (POST) 1`] = `
{
  "email": "test@example.com",
  "nbr": 10,
  "phone": "1234567890",
  "str": "most 10",
  "url": "https://example.com",
}
`;

exports[`AppController (e2e) /response_8 fail (POST) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "nested",
            "long",
            "prop",
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_8 success (POST) 1`] = `
{
  "nested": {
    "long": {
      "prop": 42,
    },
  },
}
`;

exports[`AppController (e2e) /response_9 fail (POST) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "object",
          "message": "Required",
          "path": [
            "required",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_9 success (POST) 1`] = `
{
  "opt": {
    "long": {
      "prop": 21,
    },
  },
  "required": {
    "long": {
      "prop": 21,
    },
  },
}
`;

exports[`AppController (e2e) /response_10 fail (POST) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "number",
          "message": "Expected number, received nan",
          "path": [
            "arr2d2",
            1,
            1,
          ],
          "received": "nan",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /response_10 success (POST) 1`] = `
{
  "arr2d": [
    [
      "a",
      "b",
    ],
    [
      "c",
      "d",
    ],
  ],
  "arr2d2": [
    [
      1,
      2,
      3,
    ],
    [
      4,
      5,
      6,
    ],
  ],
}
`;

exports[`AppController (e2e) /users/query_1 fail (GET) 1`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "name",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/query_1 fail (GET) 2`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "too_small",
          "exact": false,
          "inclusive": true,
          "message": "Number must be greater than or equal to 0",
          "minimum": 0,
          "path": [
            "age",
          ],
          "type": "number",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/query_1 success (GET) 1`] = `
{
  "name": "lala",
}
`;

exports[`AppController (e2e) /users/query_1 success (GET) 2`] = `
{
  "age": 34,
  "name": "lala",
}
`;

exports[`AppController (e2e) /users/query_2 fail (POST) 1`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "name",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/query_2 fail (POST) 2`] = `
{
  "error": {
    "body": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "options",
            "all",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/query_2 success (POST) 1`] = `
{
  "name": "lala",
}
`;

exports[`AppController (e2e) /users/query_2 success (POST) 2`] = `
{
  "name": "lala",
  "options": {
    "all": "yes",
  },
}
`;

exports[`AppController (e2e) /users/query_3 fail (GET) 1`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "a",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/query_3 fail (GET) 2`] = `
{
  "error": {
    "query": {
      "issues": [
        {
          "code": "too_small",
          "exact": false,
          "inclusive": true,
          "message": "Number must be greater than or equal to 0",
          "minimum": 0,
          "path": [
            "b",
          ],
          "type": "number",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/query_3 success (GET) 1`] = `{}`;

exports[`AppController (e2e) /users/query_3 success (GET) 2`] = `{}`;

exports[`AppController (e2e) /users/response_1 fail (GET) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "name",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/response_1 success (GET) 1`] = `
{
  "age": 34,
  "name": "lala",
}
`;

exports[`AppController (e2e) /users/response_2 fail (POST) 1`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "name",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/response_2 fail (POST) 2`] = `
{
  "error": {
    "response": {
      "issues": [
        {
          "code": "invalid_type",
          "expected": "string",
          "message": "required",
          "path": [
            "options",
            "all",
          ],
          "received": "undefined",
        },
      ],
      "name": "ZodError",
    },
  },
}
`;

exports[`AppController (e2e) /users/response_2 success (POST) 1`] = `
{
  "name": "lala",
  "options": {
    "all": "yes",
  },
}
`;
